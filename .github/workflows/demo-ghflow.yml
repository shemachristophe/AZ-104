name: CI PR

on:
  workflow_call:
    secrets: 
      #GITHUB_TOKEN:
        #required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
  
jobs:
  build:
    name: Validate and Plan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
      
        
      - name: Terraform Init
        run: terraform init
        working-directory: '.github/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: Terraform Validate
        run: terraform validate
        working-directory: '.github/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Terraform Plan
        id: plan_hello
        shell: bash
        run: |
          terraform plan -detailed-exitcode
          echo $?
        working-directory: '.github/terraform'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS: '-var-file="../../.github/terraform/env/dev.tfvars"'
    
    outputs:
      planExitCode: ${{steps.plan_hello.output.exitcode }}
        #if: steps.plan_hello.outcome ==1
          
          
          
  apply:
    name: Apply terraform plan
    needs: build
    if: needs.build.outputs.planExitCode == 2
    runs-on: ubuntu-latest
    environment:
      name: dev

    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: ./.github/actions/deploy_ci
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
